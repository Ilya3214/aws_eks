name: Build and Push to AWS ECR

on:
  push:
    branches:
      - main
      - dev
    paths:
      - 'java_app/**'
  workflow_dispatch:

env:
  AWS_REGION: us-east-1 # Update to your AWS region
  ECR_REGISTRY: 537479208195.dkr.ecr.us-east-1.amazonaws.com # Your ECR registry URL
  ECR_REPOSITORY_NAME: java_app # Your ECR repository name

jobs:
  build-and-push:
    name: Build and Push Docker Image to AWS ECR
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout the code
    - name: Checkout code
      uses: actions/checkout@v3

    # Step 2: Configure AWS credentials
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v3
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    # Step 3: Log in to Amazon ECR
    - name: Log in to Amazon ECR
      run: |
        aws ecr get-login-password --region ${{ env.AWS_REGION }} | \
        docker login --username AWS --password-stdin ${{ env.ECR_REGISTRY }}

    # Step 4: Build the Docker image
    - name: Build Docker Image
      run: |
        docker build -t ${{ env.ECR_REPOSITORY_NAME }} ./java_app

    # Step 5: Tag the Docker image
    - name: Tag Docker Image
      run: |
        docker tag ${{ env.ECR_REPOSITORY_NAME }}:latest \
        ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY_NAME }}:latest

    # Step 6: Push the Docker image to ECR
    - name: Push Docker Image to ECR
      run: |
        docker push ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY_NAME }}:latest